Односвязный список
-	добавить элемент в начало списка – push_front(T).
-	добавить элемент в конец списка – push_back(T),
-	добавить элемент в указанное положение списка – insert(int, T),
-	удалить элемент в конце списка – pop_back(),
-	удалить элемент начале списка – pop_front(),
-	удалить из списка совпадающие с элементом значения – remove(T),
-	вернуть количество элементов в списке – size(),
-	вернуть ссылку на первый элемент – front(),
-	вернуть ссылку на последний элемент – back(),
-	проверить список пуст ли список – empty(),
-	реализовать итератор для хождения по списку в обе стороны (+ перегрузка операторов для класса списка: ++, --).

Двухсвязный список
-	добавить элемент в начало списка – push_front(T).
-	добавить элемент в конец списка – push_back(T),
-	добавить элемент в указанное положение списка – insert(int, T),
-	удалить элемент в конце списка – pop_back(),
-	удалить элемент начале списка – pop_front(),
-	удалить из списка совпадающие с элементом значения – remove(T),
-	вернуть количество элементов в списке – size(),
-	вернуть ссылку на первый элемент – front(),
-	вернуть ссылку на последний элемент – back(),
-	проверить список пуст ли список – empty(),
-	реализовать итератор для хождения по списку в обе стороны (+ перегрузка операторов для класса списка: ++, --).

Уточнение разработки
	придерживаться такому же названию функций,
	класс односвязного списка назвать OneList,
	класс двухсвязного списка назвать DoubleList,
	класс элемента списка назвать Element,
	список должен поддерживать любой тип данных,
	при динамическом выделении памяти разрешается пользоваться возможностями С++ (new, delete).

